# GPU-enabled ROS1 Noetic Base Image
FROM nvidia/cuda:11.8.0-runtime-ubuntu20.04 AS ros1-gpu-base

SHELL ["/bin/bash", "-c"]

# Set noninteractive installation
ENV DEBIAN_FRONTEND=noninteractive

# Set locale
RUN apt-get update && apt-get install -y locales curl gnupg2 lsb-release
RUN locale-gen en_US en_US.UTF-8
RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV TZ=Etc/UTC

# Install ROS1 Noetic
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -

RUN apt-get update && apt-get install -y \
    ros-noetic-desktop-full \
    && rm -rf /var/lib/apt/lists/*

# Install development tools and dependencies
RUN apt-get update && apt-get install -y \
    vim \
    tmux \
    tree \
    clang \
    python3-pip \
    python3-catkin-tools \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-wstool \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

FROM ros1-gpu-base AS ros1-gpu-packages

# Initialize rosdep
RUN rosdep init && rosdep update

# Set up ROS environment variables
ENV ROS_DISTRO=noetic
ENV ROS_ROOT=/opt/ros/noetic
ENV ROS_PACKAGE_PATH=/opt/ros/noetic/share

# Create a workspace directory
RUN mkdir -p /catkin_ws/src
WORKDIR /catkin_ws

# Set NVIDIA/OpenGL environment variables for GUI applications
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=all
ENV LIBGL_ALWAYS_INDIRECT=0

# Set X11 and GUI environment variables
ENV DISPLAY=:0
ENV QT_X11_NO_MITSHM=1
ENV XDG_RUNTIME_DIR=/tmp/runtime-root
ENV DBUS_SESSION_BUS_ADDRESS=unix:path=/tmp/dbus-session

# Source ROS setup in bashrc for interactive shells
RUN echo "source /opt/ros/noetic/setup.bash" >> /root/.bashrc

# Setup entrypoint
COPY ./ros_on_docker_nvidia/ros1_gpu_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"] 