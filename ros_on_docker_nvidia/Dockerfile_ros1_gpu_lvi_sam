# GPU-enabled ROS1 Noetic with LVI-SAM - using existing base image
# NOTE: LIO and LVI have some similar dependencies (GTSAM, Livox SDK, etc.)
FROM ros1-dev-gpu-base AS ros1-gpu-lio-sam-base

# Install additional dependencies needed for LIO-SAM
RUN apt-get update && apt-get install -y \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

FROM ros1-gpu-lio-sam-base AS ros1-gpu-lio-sam-gtsam

# Install GTSAM (required for LIO-SAM)
RUN apt-get update && \
    add-apt-repository -y ppa:borglab/gtsam-release-4.0 && \
    apt-get update && \
    apt-get install -y libgtsam-dev libgtsam-unstable-dev && \
    apt-get upgrade -y && \
    rm -rf /var/lib/apt/lists/*

# Install ROS packages needed for LIO-SAM
RUN apt-get update && apt-get install -y \
    ros-noetic-navigation \
    ros-noetic-robot-localization \
    ros-noetic-robot-state-publisher \
    ros-noetic-velodyne-msgs \
    ros-noetic-pcl-ros \
    nlohmann-json3-dev \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

FROM ros1-gpu-lio-sam-gtsam AS ros1-gpu-lio-sam-livox

# Set up catkin workspace
WORKDIR /catkin_ws

# Clone and build Livox SDK2
RUN mkdir -p /livox_sdk \
    && cd /livox_sdk \
    && git clone https://github.com/Livox-SDK/Livox-SDK2.git \
    && cd Livox-SDK2 \
    && git checkout v1.2.5 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && make install

# Clone, build and install Livox ROS Driver
RUN mkdir -p /livox_sdk/catkin_ws/src \
    && cd /livox_sdk/catkin_ws/src \
    && git clone https://github.com/Livox-SDK/livox_ros_driver2.git \
    && cd livox_ros_driver2 \
    && git checkout 1.2.4 \
    && source /opt/ros/noetic/setup.bash \
    && ./build.sh ROS1

FROM ros1-gpu-lio-sam-livox AS ros1-gpu-lvi-sam-livox-and-ceres

RUN apt-get update && apt-get install -y \
    libgoogle-glog-dev \
    libatlas-base-dev \
    && rm -rf /var/lib/apt/lists/*

# Download Ceres Solver
RUN wget -O /catkin_ws/ceres.zip https://github.com/ceres-solver/ceres-solver/archive/1.14.0.zip

# Unzip Ceres Solver
RUN unzip /catkin_ws/ceres.zip -d /catkin_ws/ && rm /catkin_ws/ceres.zip

# Build Ceres Solver
RUN cd /catkin_ws/ceres-solver-1.14.0 \
    && mkdir ceres-bin \
    && cd ceres-bin \
    && cmake .. \
    && make -j$(nproc) \
    && make install

FROM ros1-gpu-lvi-sam-livox-and-ceres AS ros1-gpu-lvi-sam-final

# Clone LIO-SAM and apply the necessary tweaks for Noetic
# NOTE: solution to FLANN serialization issue was adapted from:
# https://github.com/mariusmuja/flann/issues/214
RUN mkdir -p /catkin_ws/src \
    && cd /catkin_ws/src \
    && git clone https://github.com/TixiaoShan/LVI-SAM.git \
    && cd LVI-SAM \
    && git checkout 0d822f6dcac3378312f6703b4f45829e049f221a \
    # Update C++ standard from C++11 to C++14
    && sed -i 's/set(CMAKE_CXX_FLAGS "-std=c++11")/set(CMAKE_CXX_FLAGS "-std=c++14")/g' CMakeLists.txt \
    && cd src \
    # Replace opencv/cv.h with opencv2/opencv.hpp
    && sed -i 's/#include <opencv\/cv.h>/#include <opencv2\/opencv.hpp>/g' lidar_odometry/utility.h \
    && sed -i 's/#include <opencv\/cv.h>/#include <opencv2\/opencv.hpp>/g' visual_odometry/visual_feature/parameters.h \
    && sed -i 's/#include <opencv\/cv.h>/#include <opencv2\/opencv.hpp>/g' visual_odometry/visual_loop/parameters.h \
    # Fix OpenCV constants for modern OpenCV compatibility
    # && find . -name "*.cpp" -o -name "*.h" | xargs sed -i 's/CV_RGB2GRAY/cv::COLOR_RGB2GRAY/g' \
    # && find . -name "*.cpp" -o -name "*.h" | xargs sed -i 's/CV_FONT_HERSHEY_SIMPLEX/cv::FONT_HERSHEY_SIMPLEX/g' \
    # && find . -name "*.cpp" -o -name "*.h" | xargs sed -i 's/CV_GRAY2RGB/cv::COLOR_GRAY2RGB/g' \
    # Fix PCL deprecation warning
    # && sed -i 's/uint16_t, ring, ring/std::uint16_t, ring, ring/g' src/lidar_odometry/imageProjection.cpp \
    # Fix TF exception warnings (catch by reference instead of value)
    # && find . -name "*.cpp" -o -name "*.h" | xargs sed -i 's/catch (tf::TransformException ex)/catch (const tf::TransformException\& ex)/g' \
    # Add PCL 1.10 compatibility headers
    && grep -rli "lvi_sam/cloud_info.h" . | xargs sed -i 's/#include \"lvi_sam\/cloud_info.h\"/#include \"lvi_sam\/cloud_info.h\"\n#include <pcl\/point_types.h>\n#include <pcl/\point_cloud.h>\n#include <pcl\/point_representation.h>/g'

# # Build the catkin workspace
# RUN source /opt/ros/noetic/setup.bash \
#     && source /livox_sdk/catkin_ws/devel/setup.bash \
#     && cd /catkin_ws \
#     && catkin init \
#     && catkin config --no-install \
#     && catkin build --start-with lvi_sam

###############################################################################

# FROM ros1-gpu-lio-sam-final AS ros1-gpu-lio-sam-recording

# # Install additional dependencies for recording capabilities
# # RUN apt-get update && apt-get install -y \
# #     nlohmann-json3-dev \
# #     && rm -rf /var/lib/apt/lists/*

# # Copy cpp_pubsub package to the catkin workspace (TODO: rename to bag2laz)
# COPY ./ros_on_docker/cpp_pubsub_ros1/ /catkin_ws/src/cpp_pubsub/

# # Rebuild the catkin workspace to include the cpp_pubsub package
# RUN source /opt/ros/noetic/setup.bash \
#     && source /livox_sdk/catkin_ws/devel/setup.bash \
#     && source /catkin_ws/devel/setup.bash \
#     && cd /catkin_ws \
#     && git clone https://github.com/LASzip/LASzip.git ./src/cpp_pubsub/src/3rdparty/LASzip \
#     && cd ./src/cpp_pubsub/src/3rdparty/LASzip \
#     && git checkout 4aada844e87066533619bcf0abec32ebee7da5d7 \
#     && cd /catkin_ws \
#     && catkin build

# Create a workspace directory for user projects
RUN mkdir -p /catkin_ws/src
WORKDIR /catkin_ws

# Source ROS setup in bashrc for interactive shells
RUN echo "source /opt/ros/noetic/setup.bash" >> /root/.bashrc \
    && echo "source /livox_sdk/catkin_ws/devel/setup.bash" >> /root/.bashrc \
    && echo "source /catkin_ws/devel/setup.bash" >> /root/.bashrc

# Setup entrypoint
COPY ./ros_on_docker_nvidia/ros1_gpu_lio_sam_entrypoint.sh /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"] 