# Start from the ROS2 Foxy base
FROM osrf/ros:foxy-ros1-bridge AS ros1-ros2-bridge-base

SHELL ["/bin/bash", "-c"]

# Set noninteractive installation
ENV DEBIAN_FRONTEND=noninteractive

# Install ROS1 Noetic
RUN apt-get update || true  # proceed despite errors from OSRF key server
RUN apt-get install -y \
    vim \
    tmux \
    tree \
    clang \
    curl \
    gnupg2 \
    locales \
    lsb-release \
    python3-pip

RUN locale-gen en_US en_US.UTF-8
RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

ENV LANG=en_US.UTF-8
ENV TZ=Etc/UTC

# Use ROS Noetic from Ubuntu 20.04 repositories
RUN sh -c 'echo "deb [arch=amd64] http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros1-latest.list'

# ROS2 key
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
# ROS1 key
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | apt-key add -

# Update and install ROS1 packages
RUN apt-get update
RUN apt-get install -y \
    ros-noetic-ros-base \
    ros-noetic-rosbag

# Install ros1_bridge
RUN apt-get install -y ros-foxy-ros1-bridge

# Install other useful tools
RUN apt-get install -y \
    ros-foxy-rosbag2 \
    ros-foxy-rosbag2-transport

# Create a new stage after the time-consuming apt upgrade
FROM ros1-ros2-bridge-base AS ros1-ros2-bridge-upgraded

RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN apt clean && apt update

# The time-consuming operation is isolated in this stage
RUN apt upgrade -y  # Required for fixing ros-foxy-rosbag2-bag-v2-plugins

RUN apt install -y ros-foxy-pcl-ros  # Required for livox_ros_driver2 (ROS2) (and is huge in size)
RUN apt install -y ros-noetic-pcl-ros  # Required for livox_ros_driver2 (ROS1)

# Install rosbag2_bag_v2_plugins for reading ROS1 bags in ROS2
# This plugin allows reading legacy ROS1 bag files directly in ROS2
RUN apt install -y ros-foxy-rosbag2-bag-v2-plugins
RUN apt install -y ros-noetic-velodyne-msgs ros-foxy-velodyne-msgs

# Build dependencies for rebuildingrosbag2_bag_v2_plugins from source
RUN apt install -y ros-foxy-rosbag2-test-common

RUN rm -rf /var/lib/apt/lists/*

# Upgraded stage
FROM ros1-ros2-bridge-upgraded AS ros1-ros2-bridge-final


WORKDIR /ros2_ws

# IMPORTANT: Livox-SDK2 exposes a C api and is more recent, while Livox-SDK exposes a C++ api.

RUN mkdir -p /ros2_ws/src \
    && cd /ros2_ws/src \
    && git clone https://github.com/Livox-SDK/Livox-SDK2.git \
    && cd Livox-SDK2 \
    && git checkout v1.2.5 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j 10 \
    && make install

# Install ROS1 Livox driver
RUN mkdir -p /ros1_ws/src \
    && cd /ros1_ws/src \
    && git clone https://github.com/Livox-SDK/livox_ros_driver2.git \
    && cd livox_ros_driver2 \
    && git checkout 1.2.4 \
    && (source /opt/ros/noetic/setup.bash \
    && ./build.sh ROS1)

# Install ROS2 Livox driver
RUN cd /ros2_ws/src \
    && git clone https://github.com/Livox-SDK/livox_ros_driver2.git livox_ros_driver2 \
    && cd livox_ros_driver2 \
    && git checkout 1.2.4 \
    && (source /opt/ros/foxy/setup.bash \
    && ./build.sh ROS2)

FROM ros1-ros2-bridge-final

# TODO build rosbag2_bag_v2_plugins from source
# RUN cd /ros2_ws/merged_ws/src \
#     && git clone https://github.com/ros2/rosbag2_bag_v2.git \
#     && cd rosbag2_bag_v2 \
#     && git checkout foxy \
#     && cd .. \
#     && source /opt/ros/noetic/setup.bash \
#     && source /ros1_ws/devel/setup.bash \
#     && source /opt/ros/foxy/setup.bash \
#     && source /ros2_ws/install/setup.bash \
#     && colcon build --packages-select ros1_rosbag_storage_vendor --merge-install
#     && colcon build --packages-select rosbag2_bag_v2_plugins --merge-install

# TODO build rosbag2_bag_v2_plugins from source

# RUN source install/setup.bash
# RUN source /opt/ros/foxy/setup.bash


# Set up entrypoint
COPY ros1_ros2_entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]

# Add usage instructions as comments
# To read ROS1 bags in ROS2:
# ros2 bag info -s rosbag_v2 /path/to/your/ros1bag.bag
# ros2 bag play -s rosbag_v2 /path/to/your/ros1bag.bag

# IMPORTANT: The ROS 1 installation must be sourced before ROS2 to avoid problems with the class_loader.